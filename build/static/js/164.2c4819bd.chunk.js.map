{"version":3,"file":"static/js/164.2c4819bd.chunk.js","mappings":"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","sources":["webpack://your-app/./src/pages/account/Support/Support.module.css?dddd","redux/actions/supportActions.js","pages/account/Support/MessagesForm.js","pages/account/Support/MessagesField.js","pages/account/Support/TicketButton.js","pages/account/Support/Messages.js","pages/account/Support/TicketCard.js","pages/account/Support/images/chevron_down.svg","pages/account/Support/TicketsList.js","pages/account/Support/Support.js","pages/account/Support/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chat_wrapper\":\"Support_chat_wrapper__8hf9N\",\"chat_contacts\":\"Support_chat_contacts__C5H2I\",\"chat_contact_card\":\"Support_chat_contact_card__Ol9rB\",\"archive_handler\":\"Support_archive_handler__e6qKA\",\"active\":\"Support_active__GfWu4\",\"is_not_running\":\"Support_is_not_running__LzZSd\",\"chevron_rotated\":\"Support_chevron_rotated__IYB51\",\"first\":\"Support_first__Y-q5-\",\"chat_contact_wrapper\":\"Support_chat_contact_wrapper__3nCTF\",\"chat_contact_avatar\":\"Support_chat_contact_avatar__--rot\",\"active_user\":\"Support_active_user__vR+eh\",\"chat_contact_data\":\"Support_chat_contact_data__jalI+\",\"chat_contact_name\":\"Support_chat_contact_name__yJMTC\",\"chat_contact_last_message\":\"Support_chat_contact_last_message__OHk4l\",\"chat_contact_last_message_date\":\"Support_chat_contact_last_message_date__idsZx\",\"chat_messages\":\"Support_chat_messages__1duyI\",\"chat_messages_messages\":\"Support_chat_messages_messages__zEflC\",\"message_wrapper\":\"Support_message_wrapper__13SDL\",\"is_mine\":\"Support_is_mine__0X+WP\",\"user_avatar\":\"Support_user_avatar__nLX91\",\"message_body\":\"Support_message_body__oOdjW\",\"message_header\":\"Support_message_header__K9nqb\",\"message_author_name\":\"Support_message_author_name__zqQwo\",\"message_date_time\":\"Support_message_date_time__mcGSs\",\"message_text\":\"Support_message_text__NPsdz\",\"message_status\":\"Support_message_status__EjePN\",\"send_button\":\"Support_send_button__-HEwu\",\"editable_area\":\"Support_editable_area__hbm5E\",\"tickets_button\":\"Support_tickets_button__r0erg\"};","import * as t from '../types'\nimport axios from 'axios'\n\n\nexport const set_current_ticket = id => async dispatch => {\n  dispatch({\n    type: t.SET_CURRENT_TICKET,\n    payload: id,\n  })\n}\n\nexport const clear_current_ticket = () => async dispatch => {\n  dispatch({\n    type: t.CLEAR_CURRENT_TICKET,\n  })\n}\n\nexport const set_current_ticket_status = n => async dispatch => {\n  dispatch({\n    type: t.SET_CURRENT_TICKET_STATUS,\n    payload: n,\n  })\n}\n\nexport const clear_current_ticket_status = () => async dispatch => {\n  dispatch({\n    type: t.CLEAR_CURRENT_TICKET_STATUS,\n  })\n}\n\nexport const get_all_tickets = () => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/support_tickets/\n`, config)\n\n    dispatch({\n      type: t.GET_ALL_TICKETS_SUCCESS,\n      payload: res.data,\n    })\n\n  } catch (err) {\n    console.error(err)\n    dispatch({\n      type: t.GET_ALL_TICKETS_FAIL,\n      payload: err.response.data,\n    })\n  }\n}\n\nexport const set_new_ticket = (data) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const body = JSON.stringify(data)\n\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/support_tickets/`,\n      body,\n      config)\n\n    dispatch({\n      type: t.SET_NEW_TICKET_SUCCESS,\n      payload: res.data,\n    })\n\n  } catch (err) {\n    console.error(err)\n    dispatch({\n      type: t.SET_NEW_TICKET_FAIL,\n      payload: err.response.data,\n    })\n  }\n}\n\nexport const close_ticket = (id) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      Accept: 'application/json',\n    },\n  }\n\n  const body = null\n\n  try {\n    const res = await axios.patch(`${process.env.REACT_APP_API_URL}/api/support_tickets/${id}/close_ticket/`,\n      body,\n      config)\n\n    dispatch({\n      type: t.CLOSE_TICKET_SUCCESS,\n      payload: res.data,\n    })\n\n  } catch (err) {\n    console.error(err)\n    dispatch({\n      type: t.SET_NEW_TICKET_FAIL,\n      payload: err.response.data,\n    })\n  }\n}\n\nexport const set_current_support_messages = data => async dispatch => {\n  dispatch({\n    type: t.SET_CURRENT_SUPPORT_MESSAGES,\n    payload: data,\n  })\n}\n\nexport const clear_current_support_messages = () => async dispatch => {\n  dispatch({\n    type: t.CLEAR_CURRENT_SUPPORT_MESSAGES,\n  })\n}\n\nexport const set_all_support_messages_read = () => async dispatch => {\n  dispatch({\n    type: t.SET_ALL_SUPPORT_MESSAGES_READ,\n  })\n}\n\nexport const set_all_support_messages_unread = () => async dispatch => {\n  dispatch({\n    type: t.SET_ALL_SUPPORT_MESSAGES_UNREAD,\n  })\n}\n\n\n\n\n\n\n","import React, {useRef, useState} from 'react';\nimport styles from './Support.module.css';\nimport {connect} from 'react-redux';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport send from \"../Chat/images/send.svg\";\n\nconst MessagesForm = ({action}) => {\n\n  const textareaRef = useRef()\n\n  const handleSend = (e) => {\n    e.preventDefault();\n    action(message)\n    setMessage('')\n  }\n\n  const [message, setMessage] = useState('')\n\n  const handleMessageEdit = (e) => {\n    setMessage(e.target.value)\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSend}>\n        {/*<div ref={ref} className={styles.editable_area} contentEditable=\"true\" onChange={(e) => console.log(e.target)}/>*/}\n        <TextareaAutosize ref={textareaRef}  placeholder='Текст сообщения' onChange={handleMessageEdit} value={message} maxRows={3}/>\n        {/*<textarea ref={textareaRef} placeholder='Текст сообщения' onChange={handleMessageEdit} value={message}/>*/}\n        <button type='submit'><img src={send} alt=\"\"/></button>\n      </form>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({})\nconst mapDispatchToProps = {}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MessagesForm)","import React, {useEffect, useRef} from 'react';\nimport styles from './Support.module.css';\nimport {connect} from 'react-redux';\nimport Message from \"../Chat/Message\";\n\nconst MessagesForm = ({user, current_support_messages, }) => {\n\n  const scrollRef = useRef(null);\n\n  useEffect(() => {\n    if (scrollRef) {\n      scrollRef.current.addEventListener('DOMNodeInserted', event => {\n        const { currentTarget: target } = event;\n        target.scroll({ top: target.scrollHeight, behavior: 'smooth' });\n      });\n    }\n  }, [current_support_messages]);\n\n  return (\n    <>\n      <div ref={scrollRef} className={styles.chat_messages_messages}>\n        {current_support_messages?.map((i, n) => <Message key={n} data={i} author={i.author} user_id={user.id}/>)}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  current_support_messages: state.support.current_support_messages,\n})\nconst mapDispatchToProps = {}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MessagesForm)","import React from 'react';\nimport styles from './Support.module.css';\nimport {connect} from 'react-redux';\nimport {close_ticket} from \"../../../redux/actions/supportActions\";\n\nconst TicketButton = ({active_ticket = false, action, close_ticket}) => {\n\n  const handleClick = () => {\n    action()\n    // action(!active_ticket)\n  }\n\n  return (\n    <>\n      <div className={styles.tickets_button} onClick={handleClick}>\n        {active_ticket ? 'Закрыть заявку' : 'Открыть заявку'}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({})\nconst mapDispatchToProps = {close_ticket}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TicketButton)","import React, {useEffect, useState} from 'react';\nimport styles from './Support.module.css';\nimport {connect} from 'react-redux';\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\";\nimport {\n  clear_current_support_messages, clear_current_ticket, clear_current_ticket_status, close_ticket,\n  set_all_support_messages_read,\n  set_all_support_messages_unread,\n  set_current_support_messages, set_new_ticket\n} from \"../../../redux/actions/supportActions\";\nimport MessagesForm from \"./MessagesForm\";\nimport MessagesField from \"./MessagesField\";\nimport TicketButton from \"./TicketButton\";\n\nconst Messages = ({\n                    current_ticket,\n                    set_current_support_messages,\n                    clear_current_support_messages,\n                    set_all_support_messages_read,\n                    set_all_support_messages_unread,\n                    current_status,\n                    set_new_ticket,\n                    close_ticket,\n                    clear_current_ticket_status,\n                    clear_current_ticket,\n}) => {\n\n  console.log(current_ticket)\n  console.log(current_status)\n\n  const [newTicket, setNewTicket] = useState(false)\n\n  const client = current_ticket ?\n    new W3CWebSocket(`wss://traveler.market/ws/support_chat/${current_ticket}/?token=${localStorage.getItem('access')}`)\n    :\n    null\n  ;\n\n  useEffect(() => {\n    return () => {\n      clear_current_support_messages()\n      client?.close()\n    }\n  })\n\n  useEffect(() => {\n    if (client) {\n      client.onopen = () => {\n        console.log('WebSocket Client Connected');\n      };\n\n      client.onclose = () => {\n        console.log('WebSocket Client Disconnected');\n      };\n\n      client.onerror = (e) => {\n        console.error(e);\n        console.log('Connection Error');\n      };\n\n      client.onmessage = (e) => {\n        const dataFromServer = JSON.parse(e.data);\n        // console.log('got reply!');\n        if (dataFromServer) {\n          if (dataFromServer?.command === 'set_read') {\n            set_all_support_messages_read()\n          } else if (dataFromServer?.command === 'set_unread') {\n            set_all_support_messages_unread()\n          } else {\n            set_current_support_messages(dataFromServer)\n          }\n        }\n      };\n    }\n  }, [client])\n\n  const handleSend = (message) => {\n    if(newTicket){\n      set_new_ticket({\n        text: message\n      })\n    } else {\n      client.send(JSON.stringify({\n        message: message\n      }));\n    }\n  }\n\n  useEffect(() => {\n    if(newTicket) {\n      clear_current_ticket_status()\n      clear_current_ticket()\n      clear_current_support_messages()\n    }\n  }, [newTicket])\n\n  const handleTicketButton = () => {\n    if(current_status && current_status !== 3){\n      close_ticket(current_ticket)\n      clear_current_ticket_status()\n      clear_current_ticket()\n      clear_current_support_messages()\n      setNewTicket(false)\n    } else {\n      setNewTicket((newTicket) => !newTicket)\n    }\n  }\n\n  return (\n    <>\n      <div className={styles.chat_messages}>\n        <TicketButton active_ticket={current_status && current_status !== 3}\n                       action={handleTicketButton}/>\n        <MessagesField/>\n        <div className={styles.send_button}>\n          {((current_status && current_status !== 3) || newTicket) && <MessagesForm action={handleSend} new_ticket={newTicket}/>}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  current_ticket: state.support.current_ticket,\n  current_status: state.support.current_status,\n})\nconst mapDispatchToProps = {\n  set_current_support_messages,\n  clear_current_support_messages,\n  set_all_support_messages_read,\n  set_all_support_messages_unread,\n  set_new_ticket,\n  close_ticket,\n  clear_current_ticket_status,\n  clear_current_ticket,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Messages)","import React, {useEffect} from 'react';\nimport styles from './Support.module.css';\nimport {connect} from 'react-redux';\nimport {truncateText} from \"../../../functions\";\n\nconst TicketCard = ({\n                      ticket,\n                      is_running,\n                      action,\n                      active = false,\n                      first = false,\n                    }) => {\n\n  const {\n    id,\n    staff,\n    last_message,\n  } = ticket\n\n  useEffect(() => {\n    if(is_running) {\n      action(id)\n    }\n  }, [is_running])\n\n  const handleClick = () => {\n    action(ticket)\n  }\n\n  return (\n    <>\n      <div className={`${styles.chat_contact_card} ${active ? styles.active : ''} ${!is_running ? styles.is_not_running : ''} ${first ? styles.first : ''}`} onClick={handleClick}>\n        <div className={styles.chat_contact_wrapper}>\n          <div className={styles.chat_contact_data}>\n            <div className={styles.chat_contact_name}>{`Сотрудник #${staff}`}</div>\n            <div className={styles.chat_contact_last_message}>{truncateText(last_message, 20)}</div>\n          </div>\n        </div>\n        {/*<div className={styles.chat_contact_last_message_date}>{last_message_date}</div>*/}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({})\nconst mapDispatchToProps = {}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TicketCard)","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgChevronDown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 8,\n    viewBox: \"0 0 12 8\",\n    fill: \"#000000\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.14724 7.25691C5.08654 7.196 5.03532 7.12992 4.99076 7.0604L0.340179 2.4096C-0.113322 1.95589 -0.113537 1.21978 0.340394 0.765852C0.79411 0.311922 1.53 0.311922 1.98414 0.765852L5.98945 4.77116L10.0156 0.745189C10.4694 0.291258 11.205 0.291258 11.6594 0.745189C11.8867 0.972262 11.9999 1.26993 11.9999 1.56696C11.9999 1.86398 11.8867 2.16187 11.6594 2.38872L6.98728 7.0604C6.94273 7.12992 6.8915 7.19643 6.83081 7.25691C6.59878 7.48893 6.29315 7.60085 5.98902 7.59526C5.6849 7.60086 5.37948 7.48893 5.14724 7.25691Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronDown);\nexport default __webpack_public_path__ + \"static/media/chevron_down.7ef6027d1679a7f457f31c202b92a83c.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useEffect, useState} from 'react';\nimport styles from './Support.module.css';\nimport {connect} from 'react-redux';\nimport TicketCard from \"./TicketCard\";\nimport {\n  clear_current_ticket, clear_current_ticket_status,\n  set_all_support_messages_unread,\n  set_current_ticket, set_current_ticket_status\n} from \"../../../redux/actions/supportActions\";\nimport chevron from './images/chevron_down.svg'\n\nconst TicketsList = ({\n                       clear_current_ticket,\n                       set_all_support_messages_unread,\n                       set_current_ticket,\n                       current_ticket,\n                       running_ticket,\n                       archive_tickets,\n                       set_current_ticket_status,\n}) => {\n\n  const [archiveActive, setArchiveActive] = useState(false)\n\n  useEffect(() => {\n    if(running_ticket) {\n      set_current_ticket(running_ticket.id)\n      set_current_ticket_status(running_ticket.status)\n    }\n  }, [running_ticket])\n\n  const handleCurrentTicket = (ticket) => {\n    clear_current_ticket()\n    set_all_support_messages_unread()\n    set_current_ticket(ticket.id)\n    set_current_ticket_status(ticket.status)\n  }\n\n  console.log(running_ticket)\n\n  return (\n    <>\n      <div className={styles.chat_contacts}>\n        {running_ticket && <TicketCard ticket={running_ticket} action={handleCurrentTicket} is_running={true}\n                                                         active={current_ticket === running_ticket.id} first={true}/>}\n        <div className={`${styles.chat_contact_card} ${styles.archive_handler}`} onClick={() => setArchiveActive((archiveActive) => !archiveActive)}>\n          <div>\n            Архив заявок\n          </div>\n          <div className={archiveActive ? styles.chevron_rotated : ''}>\n            <img src={chevron} alt=\"\"/>\n          </div>\n        </div>\n        {archiveActive && archive_tickets?.map((i, n) => <TicketCard key={n} ticket={i} action={handleCurrentTicket} is_running={running_ticket?.id === i.id}\n                                                active={current_ticket === i.id} first={n === 0}/>)}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  all_tickets: state.support.all_tickets,\n  current_ticket: state.support.current_ticket,\n  running_ticket: state.support.running_ticket,\n  archive_tickets: state.support.archive_tickets,\n})\nconst mapDispatchToProps = {\n  clear_current_ticket,\n  set_all_support_messages_unread,\n  set_current_ticket,\n  set_current_ticket_status,\n  clear_current_ticket_status,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TicketsList)","import React, {useEffect} from 'react'\nimport styles from './Support.module.css'\nimport {connect} from 'react-redux'\nimport Messages from \"./Messages\";\nimport Account from \"../../../layouts/account/account\";\nimport TicketsList from \"./TicketsList\";\nimport {\n  clear_current_ticket, clear_current_ticket_status,\n  get_all_tickets,\n  set_all_support_messages_unread, set_current_ticket_status\n} from \"../../../redux/actions/supportActions\";\n\nconst Support = ({\n                   get_all_tickets,\n                   clear_current_ticket,\n                   set_all_support_messages_unread,\n                   clear_current_ticket_status,\n                 }) => {\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n    get_all_tickets()\n    return () => {\n      clear_current_ticket_status()\n      clear_current_ticket()\n      set_all_support_messages_unread()\n    }\n  }, [])\n\n  return (\n    <>\n      <Account title='Поддержка' menu_item='support' page={'support'}>\n\n        <div className={styles.chat_wrapper}>\n          <TicketsList/>\n          <Messages/>\n        </div>\n\n      </Account>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = {\n  get_all_tickets,\n  clear_current_ticket,\n  set_all_support_messages_unread,\n  clear_current_ticket_status,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Support)","import Support from './Support'\n\nexport default Support"],"names":["clear_current_ticket","dispatch","type","t","clear_current_ticket_status","close_ticket","id","config","headers","Authorization","localStorage","getItem","Accept","axios","process","res","payload","data","console","error","response","set_all_support_messages_unread","connect","state","action","textareaRef","useRef","useState","message","setMessage","onSubmit","e","preventDefault","ref","placeholder","onChange","target","value","maxRows","src","send","alt","user","auth","current_support_messages","support","scrollRef","useEffect","current","addEventListener","event","currentTarget","scroll","top","scrollHeight","behavior","className","styles","map","i","n","Message","author","user_id","mapDispatchToProps","active_ticket","onClick","set_current_support_messages","clear_current_support_messages","set_all_support_messages_read","set_new_ticket","body","JSON","stringify","current_ticket","current_status","log","newTicket","setNewTicket","client","W3CWebSocket","close","onopen","onclose","onerror","onmessage","dataFromServer","parse","command","MessagesField","text","new_ticket","ticket","is_running","active","first","staff","last_message","truncateText","set_current_ticket","set_current_ticket_status","all_tickets","running_ticket","archive_tickets","archiveActive","setArchiveActive","status","handleCurrentTicket","chevron","get_all_tickets","window","scrollTo","title","menu_item","page"],"sourceRoot":""}