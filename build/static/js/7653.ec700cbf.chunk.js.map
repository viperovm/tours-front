{"version":3,"file":"static/js/7653.ec700cbf.chunk.js","mappings":"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","sources":["components/AccountTours/Components/Important.js","components/AccountTours/FormFields/TextEditor.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport SingleWrapper from '../Wrappers/SingleWrapper'\nimport TextEditor from '../FormFields/TextEditor'\n\nimport { connect } from 'react-redux'\nimport {\n  updateTour,\n  deleteKey,\n  clearErrors,\n} from '../../../redux/actions/toursActions'\nimport ToursFormLayout from \"../../../layouts/account/ToursFormLayout\";\n\nconst ExtraServices = ({\n                         tour,\n                         updateTour,\n                         match,\n                         deleteKey,\n                         field_key,\n                         clearErrors,\n                       }) => {\n\n  useEffect(() => {\n    const scrollTo = async (el) => {\n      let anchor = document.getElementById(el)\n      anchor && anchor.scrollIntoView({block: \"center\", behavior: \"smooth\"})\n    }\n    if (field_key) {\n      scrollTo(field_key).then(() => deleteKey())\n    }\n    return () => clearErrors()\n  }, [field_key])\n\n  const handleInput = (name, value) => {\n    updateTour({\n      ...tour,\n      [name]: value,\n    })\n  }\n\n  return (\n    <>\n      <ToursFormLayout\n        section_slug={'important'}\n        section_name={'Важно знать'}\n        tour_id={match.params.id}\n        forward_url={''}\n        backward_url={'details'}\n        submit_url={'/account/tours/list'}\n      >\n        <SingleWrapper label='Требования к гостю' comment='' tour={tour} name={'guest_requirements'}>\n          <TextEditor\n            action={handleInput}\n            name='guest_requirements'\n            value={tour && tour.guest_requirements}\n          />\n        </SingleWrapper>\n        <SingleWrapper label='Что взять с собой?' comment='' tour={tour} name={'take_with'}>\n          <TextEditor\n            required={true}\n            action={handleInput}\n            name='take_with'\n            value={tour && tour.take_with}\n          />\n        </SingleWrapper>\n        <SingleWrapper label='Ключевые  особенности?' comment='' tour={tour} name={'key_features'}>\n          <TextEditor\n            action={handleInput}\n            name='key_features'\n            value={tour && tour.key_features}\n          />\n        </SingleWrapper>\n        <SingleWrapper label='Что нового я увижу?' comment='' tour={tour} name={'new_to_see'}>\n          <TextEditor\n            action={handleInput}\n            name='new_to_see'\n            value={tour && tour.new_to_see}\n          />\n        </SingleWrapper>\n      </ToursFormLayout>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  tour: state.tours.current_tour,\n  error: state.tours.error,\n  field_key: state.tours.key,\n})\n\nexport default connect(mapStateToProps, {\n  updateTour,\n  deleteKey,\n  clearErrors,\n})(ExtraServices)\n","import React, { useState, useEffect, useRef } from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport isNotEmptyObject from \"../../../helpers/isNotEmptyObject\";\n\n\nconst TextEditor = ({ action, name, value, required, error = {}, }) => {\n\n  const editorRef = useRef()\n  const [editorLoaded, setEditorLoaded] = useState(false)\n  const { CKEditor, ClassicEditor } = editorRef.current || {}\n  const [currentError, setCurrentError] = useState([])\n\n  useEffect(() => {\n    if(isNotEmptyObject(error) && error.detail) {\n      let arr = []\n      arr.push(error.detail)\n      setCurrentError(arr)\n    } else if(isNotEmptyObject(error) && name === 're_password') {\n      setCurrentError(error['password'])\n    } else if(error[name]) {\n      setCurrentError(error[name])\n    }\n  }, [error, name])\n\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react').CKEditor,\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    }\n    setEditorLoaded(true)\n  }, [])\n\n\n  const [data, setData] = useState('')\n\n  useEffect(() => {\n    if(value){\n      setData(value)\n    }\n  }, [value])\n\n  // const handleData = e => {\n  //   setData(e.target.value)\n  //   action(name, e.target.value)\n  // }\n\n  return editorLoaded ? (\n    <div className={`ckeditor-textarea-wrapper with-errors-wrapper ${currentError.length > 0 ? 'error' : 'ok'}`} id={name}>\n      <CKEditor\n        editor={ClassicEditor}\n        data={data}\n        value={data}\n        config={{\n          toolbar: [\n            'bold',\n            'italic',\n            'blockQuote',\n            '|',\n            // 'link',\n            'numberedList',\n            'bulletedList',\n            '|',\n            // 'imageUpload',\n            // 'mediaEmbed',\n            // '|',\n            'undo',\n            'redo',\n          ],\n        }}\n        onChange={(event, editor) => {\n          setCurrentError([])\n          const data = editor.getData()\n          action(name, data)\n        }}\n        onBlur={(event, editor) => {\n          const data = editor.getData()\n          action(name, data === '<p></p>' ? '' : data)\n        }}\n      />\n      <div className=\"errors-list\">\n        {/*{currentError}*/}\n        <ul>\n          { Array.isArray(currentError) && currentError.length > 0 && currentError.map((item, index) => (\n            <li key={index} >{item}</li>\n          ))\n          }\n        </ul>\n      </div>\n    </div>\n  ) : (\n    <div><CircularProgress/></div>\n  )\n}\n\nexport default TextEditor\n"],"names":["connect","state","tour","tours","current_tour","error","field_key","key","updateTour","deleteKey","clearErrors","match","useEffect","scrollTo","el","anchor","document","getElementById","scrollIntoView","block","behavior","then","handleInput","name","value","section_slug","section_name","tour_id","params","id","forward_url","backward_url","submit_url","label","comment","action","guest_requirements","required","take_with","key_features","new_to_see","editorRef","useRef","useState","editorLoaded","setEditorLoaded","current","CKEditor","ClassicEditor","currentError","setCurrentError","isNotEmptyObject","detail","arr","push","require","data","setData","className","length","editor","config","toolbar","onChange","event","getData","onBlur","Array","isArray","map","item","index"],"sourceRoot":""}