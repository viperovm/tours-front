{"version":3,"file":"static/js/7922.efee21b9.chunk.js","mappings":"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","sources":["components/Breadcrumbs/Breadcrumb.js","components/Breadcrumbs/index.js","components/Breadcrumbs/Breadcrumbs.js","pages/Regions/Region.js","pages/Regions/Regions.js","pages/Regions/index.js","webpack://your-app/./src/components/Breadcrumbs/Breadcrumbs.module.css?d5ff"],"sourcesContent":["import React from 'react';\nimport styles from './Breadcrumbs.module.css';\nimport {connect} from 'react-redux';\n\nconst Breadcrumb = ({ isLast, children }) => {\n  return (\n    <>\n      <li>\n        {children}\n      </li>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({})\nconst mapDispatchToProps = {}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Breadcrumb)","import Breadcrumbs from './Breadcrumbs'\n\nexport default Breadcrumbs","import React, {Children, cloneElement} from 'react'\nimport styles from './Breadcrumbs.module.css'\nimport {connect} from 'react-redux'\nimport {Link} from \"react-router-dom\";\n\nconst Breadcrumbs = ({children}) => {\n\n  const arrayChildren = Children.toArray(children);\n\n  return (\n    <>\n      <ul\n        className={styles.breadcrumbs_list}\n      >\n        {Children.map(arrayChildren, (child, index) => {\n          const isLast = index === arrayChildren.length - 1;\n\n          if (! isLast && ! child.props.link ) {\n            throw new Error(\n              `BreadcrumbItem child no. ${index + 1}\n            should be passed a 'link' prop`\n            )\n          }\n\n          return (\n            <>\n              {child.props.link ? (\n                <Link\n                  to={child.props.link}\n                >\n                  <div style={{ marginRight: \"5px\" }}>\n                    {cloneElement(child, {\n                      isLast,\n                    })}\n                  </div>\n                </Link>\n              ) : (\n                <div style={{ marginRight: \"5px\" }}>\n                  {cloneElement(child, {\n                    isLast,\n                  })}\n                </div>\n              )}\n              {!isLast && (\n                <div style={{ marginRight: \"5px\" }}>\n                  -\n                </div>\n              )}\n            </>\n          );\n        })}\n      </ul>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Breadcrumbs)","import React from 'react';\nimport styles from './Regions.module.css';\nimport {connect} from 'react-redux';\n\nconst Region = ({region}) => {\n  return (\n    <>\n      {region?.name}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({})\nconst mapDispatchToProps = {}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Region)","import React, {useEffect, useState} from 'react'\nimport styles from './Regions.module.css'\nimport {connect} from 'react-redux'\nimport MetaTags from \"react-meta-tags\";\nimport MainLayout from \"../../layouts/MainLayout\";\nimport Section from \"../../components/Section\";\nimport Breadcrumbs from \"../../components/Breadcrumbs\";\nimport Breadcrumb from \"../../components/Breadcrumbs/Breadcrumb\";\nimport {Link} from \"react-router-dom\";\nimport ButtonsSet from \"../Tours/ButtonsSet\";\nimport Title from \"../Tours/Title\";\nimport Box from \"@mui/material/Box\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Tour from \"../Tours/Tour\";\nimport SearchSection from \"../Tours/SearchSection\";\nimport TextSection from \"../Tours/TextSection\";\nimport {getAllRegions} from \"../../redux/actions/toursActions\";\nimport Region from \"./Region\";\n\nconst Regions = ({language, location, active_regions, getAllRegions }) => {\n\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if(loading && active_regions?.length > 0) {\n      setLoading(false)\n    }\n  }, [active_regions, loading])\n\n  useEffect(() => {\n    getAllRegions()\n  }, [])\n\n  const {pathname} = location\n  const page = pathname[0] === '/' ? pathname.substring(1).split('/')[1] : pathname\n\n  return (\n    <>\n      <MetaTags>\n        <title>Traveler Market - Маркетплейс авторских туров</title>\n        <meta name='description' content='' />\n      </MetaTags>\n      <MainLayout page={page}>\n\n        <Section padding={'0px'}>\n          <Breadcrumbs>\n            <Breadcrumb\n              link={`/${language}`}\n            >\n              Главная\n            </Breadcrumb>\n            <Breadcrumb>\n              Регионы\n            </Breadcrumb>\n          </Breadcrumbs>\n        </Section>\n\n        <Section padding={'0 0 10px 0'}>\n          <Title title={'Регионы'} border_color={'blue'} sub_title={`Регионов: ${active_regions?.length}`}/>\n          {loading && (\n            <Box sx={{ display: 'flex' }}>\n              <CircularProgress />\n            </Box>\n          )}\n          {!loading && (\n            <div>\n              {active_regions?.map((region, index) => <Region key={index} region={region}/>)}\n            </div>\n          )}\n        </Section>\n\n        <SearchSection/>\n\n        <Section padding={'40px 0'}>\n          <Title title={'Traveler.market'} sub_title={'Немного о нас и наших услугах'} border_color={'orange'}/>\n          <TextSection/>\n        </Section>\n\n      </MainLayout>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  language: state.languages.language,\n  active_regions: state.tours.active_regions,\n})\n\nconst mapDispatchToProps = {\n  getAllRegions,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Regions)","import Regions from './Regions'\n\nexport default Regions","// extracted by mini-css-extract-plugin\nexport default {\"breadcrumbs_list\":\"Breadcrumbs_breadcrumbs_list__puTkR\"};"],"names":["connect","state","isLast","children","arrayChildren","Children","className","styles","child","index","length","props","link","Error","to","style","marginRight","cloneElement","region","name","mapDispatchToProps","getAllRegions","language","languages","active_regions","tours","location","useState","loading","setLoading","useEffect","pathname","page","substring","split","content","MainLayout","Section","padding","Breadcrumbs","Breadcrumb","Title","title","border_color","sub_title","Box","sx","display","CircularProgress","map","SearchSection","TextSection"],"sourceRoot":""}