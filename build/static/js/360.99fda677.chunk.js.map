{"version":3,"file":"static/js/360.99fda677.chunk.js","mappings":"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","sources":["components/AccountTours/Components/Modal.js","components/AccountTours/Components/SubmitButton.js","layouts/account/ToursEditLayout.js","layouts/account/ToursFormLayout.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport SingleWrapper from '../Wrappers/SingleWrapper'\nimport RemoteDataSelect from '../FormFields/RemoteDataSelect'\n\n\nimport {connect} from 'react-redux'\nimport {\n  clearCurrentTour,\n  setEditing,\n  copyTour\n} from '../../../redux/actions/toursActions'\nimport Input from \"../FormFields/Input\";\nimport SelectInput from \"../FormFields/SelectInput\";\nimport Button from \"./Button\";\n\n\nconst Modal = ({\n                 title,\n                 copyTour,\n                 tour_id,\n                 button_name,\n                 action,\n               }) => {\n\n\n  const [active, setActive] = useState(false)\n  const [date, setDate] = useState('')\n  const [dataType, setDataType] = useState('')\n\n  const handleSubmit = () => {\n    const date_obj = {start_date: date}\n    copyTour(tour_id, date_obj)\n    clearCurrentTour()\n    setEditing(false)\n    // setTimeout(() => {\n    //\n    // }, 1000)\n    setActive(false)\n    action()\n  }\n\n  const handleOpen = () => {\n    setActive(true)\n  }\n  const handleClose = () => {\n    setActive(false)\n  }\n  const handleInput = (name, value) => {\n    setDate(value)\n  }\n\n  return (\n    <>\n      <div onClick={handleOpen} style={{\n        cursor: 'pointer',\n      }}>\n        {button_name}\n      </div>\n\n      <div className={`modal-wrapper ${active && 'modal-active'}`}>\n        <div className='modal-body'>\n          <div className='modal-header'>\n            Введите дату начала нового тура.\n            <div onClick={handleClose} className='modal-close-button'/>\n          </div>\n          <div className='modal-content'>\n            <div className='my-tours-input-section'>\n              <div className='my-tours-input-full-modal'>\n                <Input\n                  action={handleInput}\n                  name='start_date'\n                  label='Дата начала тура'\n                  value={date}\n                  type='date'\n                  // multiple\n                />\n              </div>\n            </div>\n          </div>\n          <div className='modal-footer'>\n            <Button text='Копировать тур' action={handleSubmit}/>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default connect(null, {\n  clearCurrentTour,\n  setEditing,\n  copyTour\n})(Modal)","import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {\n  clearErrors,\n} from '../../../redux/actions/toursActions'\nimport Button from \"./Button\";\n\nconst SubmitButton = ({\n                        text,\n                        color = 'button-success',\n                        action,\n                        action2,\n                        section,\n                        direction = 'forward',\n                        clearErrors,\n                      }) => {\n\n  const [submitted, setSubmitted] = useState(false)\n\n  // useEffect(() => {\n  //   if (submitted && res_status && res_status >= 200 && res_status < 300) {\n  //     action2(direction)\n  //     action('ok')\n  //     setSubmitted(false)\n  //   } else if (submitted && res_status >= 400 && res_status < 500) {\n  //     action('error')\n  //     // setSubmitted(false)\n  //   } else if (submitted && res_status >= 500 && res_status < 600) {\n  //     action('popup')\n  //     setSubmitted(false)\n  //   }\n  //   return () => {\n  //     setSubmitted(false)\n  //   }\n  // }, [submitted, res_status])\n\n  // const handleAction = e => {\n  //   e.preventDefault()\n  //   if(direction === 'submit') {\n  //     tourToServer({\n  //       ...tour,\n  //       is_draft: false,\n  //       on_moderation: true,\n  //       section: section,\n  //     }, tour.id)\n  //   } else {\n  //     tourToServer({\n  //       ...tour,\n  //       section: section,\n  //     }, tour.id)\n  //   }\n  //   setSubmitted(true)\n  // }\n\n  const handleAction = async () => {\n    await clearErrors().then(() => action2(direction)).then(() => action(section))\n  }\n  const handleModeration = async () => {\n    await clearErrors().then(() => action())\n  }\n\n  return (\n    <>\n      <Button\n        text={text}\n        color={color}\n        type='button'\n        action={direction == 'submit' ? handleModeration : handleAction}\n      />\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  tour: state.tours.current_tour,\n  res_status: state.tours.res_status,\n})\n\nexport default connect(mapStateToProps, {\n  clearErrors,\n})(SubmitButton)","import React, {useState, useEffect} from 'react'\nimport MainLayout from '../MainLayout'\nimport MetaTags from 'react-meta-tags'\nimport {Link, useHistory, Redirect} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\nimport SideBar from '../../components/sideBar/SideBar'\n\nimport {load_user} from '../../redux/actions/authActions'\nimport {\n  openSecondaryMenu,\n  addTour,\n  deleteTour,\n  tourToServerUpdate,\n  clearCurrentTour,\n  setPage,\n  getTour, tourToServerError, setKey\n} from \"../../redux/actions/toursActions\";\n\nimport Modal from \"../../components/AccountTours/Components/Modal\";\nimport PopUp from \"../../components/PopUp/PopUp\";\nimport {APPLICATION_CONFIG} from \"../../data\";\nimport {getData, tourTrimmed} from \"../../functions\";\nimport axios from \"axios\";\n\nconst ToursEditLayout = ({\n                           preview = false,\n                           tour,\n                           secondary_item,\n                           secondary_name,\n                           isAuthenticated,\n                           children,\n                           openSecondaryMenu,\n                           deleteTour,\n                           tourToServerUpdate,\n                           clearCurrentTour,\n                           setPage,\n                           page,\n                           tour_id,\n                           tourToServerError,\n                           setKey,\n                         }) => {\n\n  const history = useHistory()\n\n  const [title, setTitle] = useState('Название тура')\n\n  const [loading, setLoading] = useState(false)\n\n  const [activePopUp, setActivePopUp] = useState(false)\n  const [onSavePopUp, setOnSavePopUp] = useState(false)\n  const [onErrorPopUp, setOnErrorPopUp] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  if (!isAuthenticated) {\n    return <Redirect to='/login'/>\n  }\n\n\n  useEffect(() => {\n    openSecondaryMenu(true)\n    return () => openSecondaryMenu(false)\n  }, [])\n\n  useEffect(() => {\n    if (tour && tour.name) {\n      setTitle(tour.name)\n    } else {\n      setTitle('Название тура')\n    }\n  }, [tour])\n\n  const handleTourCopy = () => {\n    history.push('/account/tours/list')\n  }\n\n  const handleTourDelete = async () => {\n    await deleteTour(tour.id)\n      .then(() => history.push('/account/tours/list'))\n  }\n\n  const handleTourPreview = () => {\n    if (!preview) {\n      tourToServerUpdate(tour, tour.id)\n      setPage(history.location)\n      history.push(`/account/tours/${tour_id}/edit/preview`)\n    } else {\n      history.push(page)\n      setPage('')\n    }\n  }\n\n  useEffect(() => {\n    if (!tour && loading) {\n      setLoading(false)\n    }\n  }, [tour, loading])\n\n  const handleModeration = async () => {\n\n    const config = APPLICATION_CONFIG\n\n    let new_tour = tourTrimmed(tour)\n\n    const data = getData(new_tour, 'submit', '')\n\n    const body = JSON.stringify(data)\n\n    try {\n      await axios.patch(`${process.env.REACT_APP_API_URL}/api/tours/${tour_id}/`, body, config)\n        .then(() => history.push('/account/tours/list'))\n        .then(() => clearCurrentTour())\n\n    } catch (err) {\n      const errStatus = err.response.status\n      const errData = err.response.data\n      if(errData?.message) {\n        setErrorMessage(errData?.message)\n      }\n      if(errStatus === 403) {\n        setOnErrorPopUp(true)\n      }\n      tourToServerError(errData)\n      errStatus >= 400 && errStatus < 500 ? setKey(Object.keys(errData)[0]) : setOnErrorPopUp(true)\n    }\n\n\n    await tourToServerUpdate({...tour, on_moderation: true, is_draft: false}, tour.id)\n\n  }\n\n  const handleSave = async () => {\n    // await tourToServerUpdate(tour, tour.id)\n    //   .then(() => setOnSavePopUp(true))\n      // .then(() => history.push('/account/tours/list'))\n      // .then(() => clearCurrentTour())\n\n    const config = APPLICATION_CONFIG\n\n    let new_tour = tourTrimmed(tour)\n\n    const body = JSON.stringify(new_tour)\n\n    try {\n      await axios.patch(`${process.env.REACT_APP_API_URL}/api/tours/${tour.id}/`, body, config)\n      setOnSavePopUp(true)\n\n    } catch (err) {\n      console.error(err)\n      const errStatus = err.response.status\n      const errData = err.response.data\n      tourToServerError(errData)\n      errStatus >= 400 && errStatus < 500 ? setKey(Object.keys(errData)[0]) : setOnErrorPopUp(true)\n    }\n  }\n\n  const handleRedirectToMenu = () => {\n    history.push('/account/tours/list')\n    clearCurrentTour()\n  }\n\n  const handleDraft = async () => {\n    await tourToServerUpdate({...tour, on_moderation: false, is_draft: true}, tour.id)\n      .then(() => history.push('/account/tours/list'))\n      .then(() => clearCurrentTour())\n  }\n\n\n  return (\n    <MainLayout>\n      <>\n        <MetaTags>\n          <title>Редактирование тура - {secondary_name}</title>\n          <meta name='description' content=''/>\n          <link rel='icon' href='/favicon.ico'/>\n        </MetaTags>\n\n        <section>\n          {activePopUp && <PopUp status={'danger'}\n                                 title={'Уверены, что хотите удалить?'}\n                                 text={'Информация будет удалена навсегда.'}\n                                 button={'Отменить'}\n                                 button2={'Удалить'}\n                                 action={() => setActivePopUp(false)}\n                                 second_action={handleTourDelete}/>}\n          {onSavePopUp && <PopUp status={'ok'}\n                                 title={'Тур успешно сохранен.'}\n                                 text={'Можете продолжить редактирование или вернуться в меню.'}\n                                 button={'Продолжить редактирование'}\n                                 button2={'Вернуться в меню'}\n                                 second_color={'button-success'}\n                                 action={() => setOnSavePopUp(false)}\n                                 is_saved={true}\n                                 second_action={handleRedirectToMenu}/>}\n          {onErrorPopUp && <PopUp status={'cancel'} title={errorMessage ? errorMessage : 'Упс... Что-то пошло не так'}\n                                 text={'Попробуйте заново внести всю информацию и нажать \"Продолжить\"'}\n                                 button={'Ок'} action={() => {\n            setOnErrorPopUp(false)\n          }}/>}\n          <div className='wrapper'>\n            <div className='breadcrumbs breadcrumbs_margin'>\n              <span><Link to='/'>Главная</Link></span> - <span><Link\n              to='/account'>Личный кабинет</Link></span> - <span><Link\n              to={`/account/tours/${tour_id}/edit/main`}>Редактирование тура</Link></span> - <span>{secondary_name}</span>\n            </div>\n          </div>\n        </section>\n\n        <section>\n          <div className='wrapper'>\n            <div className='account_block'>\n              <SideBar menu_item='tours/list' secondary_item={secondary_item} tour_id={tour_id}/>\n\n\n              <main>\n                <div className='global-h2-heading'>\n                  <h2>{title}</h2>\n                </div>\n\n                <div className='control-buttons'>\n                  <div className='control-buttons-set'>\n                    <div onClick={() => setActivePopUp(true)}>Удалить</div>\n                    <div><Modal tour_id={tour.id} button_name='Создать копию' action={handleTourCopy}/></div>\n                    {preview ?\n                      <div onClick={handleTourPreview}>Редактировать</div>\n                      :\n                      <div onClick={handleTourPreview}>Предпросмотр</div>}\n                  </div>\n                  <div className='control-buttons-set'>\n                    <button onClick={handleDraft}>В черновик</button>\n                    <button onClick={handleModeration}>На модерацию</button>\n                    <button className='button-green' onClick={handleSave}>\n                      Сохранить\n                    </button>\n                  </div>\n                </div>\n                {children}\n              </main>\n\n\n            </div>\n          </div>\n        </section>\n      </>\n    </MainLayout>\n  )\n}\n\nconst mapStateToProps = state => ({\n  tour: state.tours.current_tour,\n  page: state.tours.page,\n  isAuthenticated: state.auth.isAuthenticated,\n})\n\nexport default connect(mapStateToProps, {\n  openSecondaryMenu,\n  addTour,\n  deleteTour,\n  tourToServerUpdate,\n  clearCurrentTour,\n  setPage,\n  getTour,\n  tourToServerError,\n  setKey,\n})(ToursEditLayout)\n","import React, {useState, useEffect} from 'react'\nimport {useHistory} from \"react-router-dom\";\nimport {connect} from 'react-redux'\n\nimport {\n  getTourTypes,\n  updateTour,\n  updateTourWallpaper,\n  setName,\n  tourToServer,\n  getTour,\n  getCurrencies,\n  getCities,\n  getTourPropertyTypes,\n  getTourAccomodations,\n  getLanguages, setKey, clearErrors,\n  tourToServerError,\n  clearCurrentTour,\n} from '../../redux/actions/toursActions'\n\nimport ToursEditLayout from \"../../layouts/account/ToursEditLayout\";\nimport {getTeamMembers} from \"../../redux/actions/profileActions\";\nimport isNotEmptyObject from \"../../helpers/isNotEmptyObject\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport PopUp from \"../../components/PopUp/PopUp\";\nimport SubmitButton from \"../../components/AccountTours/Components/SubmitButton\";\nimport axios from \"axios\";\nimport {UPDATE_TOUR_FAIL, UPDATE_TOUR_SUCCESS} from \"../../redux/types\";\nimport {APPLICATION_CONFIG} from \"../../data\";\nimport {tourTrimmed, getData} from \"../../functions\";\n\nconst ToursFormLayout = ({\n                           section_slug,\n                           section_name,\n                           tour_id,\n                           forward_url,\n                           backward_url,\n                           submit_url,\n                           children,\n                           tour,\n                           getCurrencies,\n                           getCities,\n                           getTourPropertyTypes,\n                           getTourAccomodations,\n                           getLanguages,\n                           getTourTypes,\n                           getTeamMembers,\n                           getTour,\n                           setKey,\n                           clearErrors,\n                           tourToServerError,\n                           tourToServer,\n                           clearCurrentTour,\n                         }) => {\n\n  const history = useHistory()\n  const [loading, setLoading] = useState(false)\n  const [activePopUp, setActivePopUp] = useState(false)\n  const [status, setStatus] = useState(false)\n  const [direction, setDirection] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n    getTourTypes()\n    getTeamMembers()\n    getCurrencies()\n    getCities()\n    getTourPropertyTypes()\n    getTourAccomodations()\n    getLanguages()\n    return () => clearErrors()\n  }, [])\n\n  useEffect(() => {\n    if(status){\n      if(direction == 'forward') {\n        history.push(`/account/tours/${tour_id}/edit/${forward_url}`)\n      } else if(direction == 'backward') {\n        history.push(`/account/tours/${tour_id}/edit/${backward_url}`)\n      } else if(direction == 'submit') {\n        history.push(submit_url)\n      }\n    }\n  }, [status])\n\n  const toServer = async (section) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        Accept: 'application/json',\n      },\n    }\n\n    // const config = APPLICATION_CONFIG\n\n    let new_tour = tourTrimmed(tour)\n\n    const data = getData(new_tour, '', section)\n    // const data = getData(new_tour, 'submit', section)\n\n    const body = JSON.stringify(data)\n\n    try {\n      const res = await axios.patch(`${process.env.REACT_APP_API_URL}/api/tours/${tour_id}/`, body, config)\n\n      setStatus(true)\n\n      tourToServer(res.data)\n\n\n    } catch (err) {\n\n      const errStatus = err.response.status\n      const errData = err.response.data\n      tourToServerError(errData)\n      errStatus >= 400 && errStatus < 500 ? setKey(Object.keys(errData)[0]) : setActivePopUp(true)\n    }\n  }\n\n  const toModeration = async () => {\n    const config = APPLICATION_CONFIG\n\n    let new_tour = tourTrimmed(tour)\n\n    const data = getData(new_tour, 'submit', '')\n\n    const body = JSON.stringify(data)\n\n    try {\n      await axios.patch(`${process.env.REACT_APP_API_URL}/api/tours/${tour_id}/`, body, config)\n      history.push(submit_url)\n      clearCurrentTour()\n      // console.log(111)\n\n    } catch (err) {\n      const errStatus = err.response.status\n      const errData = err.response.data\n      if(errData?.message) {\n        setErrorMessage(errData?.message)\n      }\n      if(errStatus === 403) {\n        setActivePopUp(true)\n      }\n      tourToServerError(errData)\n      errStatus >= 400 && errStatus < 500 ? setKey(Object.keys(errData)[0]) : setActivePopUp(true)\n    }\n  }\n\n  useEffect(() => {\n    const loadTour = async () => {\n      setLoading(true)\n      await getTour(tour_id)\n    }\n    if (!isNotEmptyObject(tour) && direction !== 'submit') {\n      loadTour().then(() => setLoading(false))\n    }\n  }, [tour, direction])\n\n\n  return (\n    <>\n      <ToursEditLayout secondary_item={section_slug} secondary_name={section_name} tour_id={tour_id}>\n        {activePopUp && <PopUp status={'cancel'} title={errorMessage ? errorMessage : 'Упс... Что-то пошло не так'}\n                               text={'Попробуйте заново внести всю информацию и нажать \"Продолжить\"'}\n                               button={'Ок'} action={() => {\n          setActivePopUp(false)\n        }}/>}\n        <div className='my-tours-section-heading'>\n          <h4>{section_name}</h4>\n        </div>\n        {!loading &&\n          <>\n            {children}\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                width: '66%',\n              }}\n            >\n              {backward_url && <SubmitButton\n                text={'Назад'}\n                color={'button-primary'}\n                section={section_slug}\n                direction={'backward'}\n                action={toServer}\n                action2={setDirection}\n              />}\n              {forward_url && <SubmitButton\n                text={'Продолжить'}\n                color={'button-success'}\n                section={section_slug}\n                direction={'forward'}\n                action={toServer}\n                action2={setDirection}\n              />}\n              {submit_url && <SubmitButton\n                text={'На модерацию'}\n                color={'button-success'}\n                section={section_slug}\n                direction={'submit'}\n                action={toModeration}\n                action2={setDirection}\n              />}\n\n            </div>\n          </>}\n        {loading && (\n          <>\n            <div className='form-loader-spinner'>\n              <CircularProgress/>\n            </div>\n          </>\n        )}\n\n      </ToursEditLayout>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  toursTypes: state.tours.tour_types,\n  tour: state.tours.current_tour,\n  res_status: state.tours.res_status,\n  tour_name: state.tours.tour_name,\n  members: state.profile.members,\n})\n\nexport default connect(mapStateToProps, {\n  getTourTypes,\n  updateTour,\n  updateTourWallpaper,\n  setName,\n  tourToServer,\n  getTeamMembers,\n  getTour,\n  getCurrencies,\n  getCities,\n  getTourPropertyTypes,\n  getTourAccomodations,\n  getLanguages,\n  setKey,\n  clearErrors,\n  tourToServerError,\n  clearCurrentTour,\n})(ToursFormLayout)\n"],"names":["connect","clearCurrentTour","setEditing","copyTour","title","tour_id","button_name","action","useState","active","setActive","date","setDate","onClick","style","cursor","className","Input","name","value","label","type","Button","text","start_date","state","tour","tours","current_tour","res_status","clearErrors","color","action2","section","direction","handleAction","then","handleModeration","page","isAuthenticated","auth","openSecondaryMenu","addTour","deleteTour","tourToServerUpdate","setPage","getTour","tourToServerError","setKey","preview","secondary_item","secondary_name","children","history","useHistory","setTitle","loading","setLoading","activePopUp","setActivePopUp","onSavePopUp","setOnSavePopUp","onErrorPopUp","setOnErrorPopUp","errorMessage","setErrorMessage","to","useEffect","handleTourDelete","id","push","handleTourPreview","location","config","APPLICATION_CONFIG","new_tour","tourTrimmed","data","getData","body","JSON","stringify","axios","process","errStatus","response","status","errData","message","Object","keys","on_moderation","is_draft","handleSave","console","error","handleDraft","content","rel","href","button","button2","second_action","second_color","is_saved","menu_item","toursTypes","tour_types","tour_name","members","profile","getTourTypes","updateTour","updateTourWallpaper","setName","tourToServer","getTeamMembers","getCurrencies","getCities","getTourPropertyTypes","getTourAccomodations","getLanguages","section_slug","section_name","forward_url","backward_url","submit_url","setStatus","setDirection","window","scrollTo","toServer","headers","Authorization","localStorage","getItem","Accept","res","toModeration","loadTour","isNotEmptyObject","display","justifyContent","width"],"sourceRoot":""}